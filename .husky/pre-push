#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

# Check if GitHub CLI is installed
if ! command -v gh > /dev/null 2>&1; then
  echo "GitHub CLI ('gh') is not installed. Installing..."

  # Detect the OS and install `gh` accordingly
  case "$OSTYPE" in
    linux*)
      if command -v apt > /dev/null 2>&1; then
        sudo apt update && sudo apt install -y gh
      elif command -v snap > /dev/null 2>&1; then
        sudo snap install gh
      else
        echo "Error: Could not find a suitable package manager for Linux."
        exit 1
      fi
      ;;
    darwin*)
      if command -v brew > /dev/null 2>&1; then
        brew install gh
      else
        echo "Error: Homebrew is not installed. Please install it first."
        exit 1
      fi
      ;;
    msys*|cygwin*|win32)
      if command -v choco > /dev/null 2>&1; then
        choco install gh -y
      else
        echo "Error: Chocolatey is not installed. Please install it first."
        exit 1
      fi
      ;;
    *)
      echo "Error: Unsupported operating system."
      exit 1
      ;;
  esac

  # Verify installation
  if ! command -v gh > /dev/null 2>&1; then
    echo "Error: GitHub CLI installation failed."
    exit 1
  fi
  echo "GitHub CLI ('gh') installed successfully."
else
  echo "GitHub CLI ('gh') is already installed."
fi

# Load the .env.gh file
if [ -f .env.gh ]; then
  export $(cat .env.gh | xargs)
else
  echo "Error: .env.gh file not found. Please create it and add your GITHUB_TOKEN."
  exit 1
fi

# Check if GITHUB_TOKEN is set
if [ -z "$GITHUB_TOKEN" ]; then
  echo "Error: GITHUB_TOKEN is not set in .env.gh"
  exit 1
fi

# Authenticate the gh CLI with the token
echo "$GITHUB_TOKEN" | gh auth login --with-token

# Get the current branch name
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)

# Create a pull request
PR_URL=$(gh pr create --base main --head "$CURRENT_BRANCH" --title "PR for $CURRENT_BRANCH" --body "Auto-created PR")
if [ $? -eq 0 ]; then
  echo "Pull Request created: $PR_URL"
else
  echo "Failed to create a Pull Request."
  exit 1
fi
